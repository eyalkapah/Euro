// <auto-generated />
using System;
using Euro.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Euro.Context.Migrations
{
    [DbContext(typeof(EuroContext))]
    [Migration("20191022123959_SeedMatches")]
    partial class SeedMatches
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Euro.Domain.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("GroupId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            Name = "A"
                        },
                        new
                        {
                            GroupId = 2,
                            Name = "B"
                        },
                        new
                        {
                            GroupId = 3,
                            Name = "C"
                        },
                        new
                        {
                            GroupId = 4,
                            Name = "D"
                        },
                        new
                        {
                            GroupId = 5,
                            Name = "E"
                        },
                        new
                        {
                            GroupId = 6,
                            Name = "F"
                        },
                        new
                        {
                            GroupId = 7,
                            Name = "G"
                        },
                        new
                        {
                            GroupId = 8,
                            Name = "H"
                        },
                        new
                        {
                            GroupId = 9,
                            Name = "I"
                        },
                        new
                        {
                            GroupId = 10,
                            Name = "J"
                        });
                });

            modelBuilder.Entity("Euro.Domain.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GuestScored")
                        .HasColumnType("int");

                    b.Property<int>("GuestTeamId")
                        .HasColumnType("int");

                    b.Property<int>("HostScored")
                        .HasColumnType("int");

                    b.Property<int>("HostTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlayDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("MatchId");

                    b.HasIndex("GuestTeamId");

                    b.HasIndex("HostTeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            MatchId = 1,
                            GuestScored = 0,
                            GuestTeamId = 7,
                            HostScored = 3,
                            HostTeamId = 6,
                            PlayDateTime = new DateTime(2019, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MatchId = 2,
                            GuestScored = 0,
                            GuestTeamId = 9,
                            HostScored = 5,
                            HostTeamId = 8,
                            PlayDateTime = new DateTime(2019, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MatchId = 3,
                            GuestScored = 0,
                            GuestTeamId = 11,
                            HostScored = 2,
                            HostTeamId = 10,
                            PlayDateTime = new DateTime(2019, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MatchId = 4,
                            GuestScored = 0,
                            GuestTeamId = 13,
                            HostScored = 4,
                            HostTeamId = 12,
                            PlayDateTime = new DateTime(2019, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MatchId = 5,
                            GuestScored = 0,
                            GuestTeamId = 15,
                            HostScored = 2,
                            HostTeamId = 14,
                            PlayDateTime = new DateTime(2019, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MatchId = 6,
                            GuestScored = 1,
                            GuestTeamId = 17,
                            HostScored = 2,
                            HostTeamId = 16,
                            PlayDateTime = new DateTime(2019, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MatchId = 7,
                            GuestScored = 1,
                            GuestTeamId = 19,
                            HostScored = 1,
                            HostTeamId = 18,
                            PlayDateTime = new DateTime(2019, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MatchId = 8,
                            GuestScored = 1,
                            GuestTeamId = 21,
                            HostScored = 3,
                            HostTeamId = 20,
                            PlayDateTime = new DateTime(2019, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MatchId = 9,
                            GuestScored = 1,
                            GuestTeamId = 23,
                            HostScored = 0,
                            HostTeamId = 22,
                            PlayDateTime = new DateTime(2019, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MatchId = 10,
                            GuestScored = 1,
                            GuestTeamId = 25,
                            HostScored = 3,
                            HostTeamId = 24,
                            PlayDateTime = new DateTime(2019, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Euro.Domain.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("TeamId");

                    b.HasIndex("GroupId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            GroupId = 1,
                            Name = "England"
                        },
                        new
                        {
                            TeamId = 2,
                            GroupId = 1,
                            Name = "Chech Republic"
                        },
                        new
                        {
                            TeamId = 3,
                            GroupId = 1,
                            Name = "Bulgaria"
                        },
                        new
                        {
                            TeamId = 4,
                            GroupId = 1,
                            Name = "Montenegro"
                        },
                        new
                        {
                            TeamId = 5,
                            GroupId = 1,
                            Name = "Kosovo"
                        },
                        new
                        {
                            TeamId = 6,
                            GroupId = 9,
                            Name = "Kazakhstan"
                        },
                        new
                        {
                            TeamId = 7,
                            GroupId = 9,
                            Name = "Scotland"
                        },
                        new
                        {
                            TeamId = 8,
                            GroupId = 9,
                            Name = "Cyprus"
                        },
                        new
                        {
                            TeamId = 9,
                            GroupId = 9,
                            Name = "San Marino"
                        },
                        new
                        {
                            TeamId = 10,
                            GroupId = 3,
                            Name = "Northern Ireland"
                        },
                        new
                        {
                            TeamId = 11,
                            GroupId = 3,
                            Name = "Estonia"
                        },
                        new
                        {
                            TeamId = 12,
                            GroupId = 3,
                            Name = "Netherlands"
                        },
                        new
                        {
                            TeamId = 13,
                            GroupId = 3,
                            Name = "Belarus"
                        },
                        new
                        {
                            TeamId = 14,
                            GroupId = 5,
                            Name = "Slovkia"
                        },
                        new
                        {
                            TeamId = 15,
                            GroupId = 5,
                            Name = "Hungary"
                        },
                        new
                        {
                            TeamId = 16,
                            GroupId = 5,
                            Name = "Croatia"
                        },
                        new
                        {
                            TeamId = 17,
                            GroupId = 5,
                            Name = "Azerbaijan"
                        },
                        new
                        {
                            TeamId = 18,
                            GroupId = 7,
                            Name = "Israel"
                        },
                        new
                        {
                            TeamId = 19,
                            GroupId = 7,
                            Name = "Slovenia"
                        },
                        new
                        {
                            TeamId = 20,
                            GroupId = 7,
                            Name = "North Macedonia"
                        },
                        new
                        {
                            TeamId = 21,
                            GroupId = 7,
                            Name = "Latvia"
                        },
                        new
                        {
                            TeamId = 22,
                            GroupId = 7,
                            Name = "Austria"
                        },
                        new
                        {
                            TeamId = 23,
                            GroupId = 7,
                            Name = "Poland"
                        },
                        new
                        {
                            TeamId = 24,
                            GroupId = 9,
                            Name = "Belgium"
                        },
                        new
                        {
                            TeamId = 25,
                            GroupId = 9,
                            Name = "Russia"
                        },
                        new
                        {
                            TeamId = 26,
                            GroupId = 2,
                            Name = "Portugal"
                        },
                        new
                        {
                            TeamId = 27,
                            GroupId = 2,
                            Name = "Ukraine"
                        },
                        new
                        {
                            TeamId = 28,
                            GroupId = 2,
                            Name = "Luxembourg"
                        },
                        new
                        {
                            TeamId = 29,
                            GroupId = 2,
                            Name = "Lithuania"
                        },
                        new
                        {
                            TeamId = 30,
                            GroupId = 8,
                            Name = "Moldova"
                        },
                        new
                        {
                            TeamId = 31,
                            GroupId = 8,
                            Name = "France"
                        },
                        new
                        {
                            TeamId = 32,
                            GroupId = 8,
                            Name = "Andora"
                        },
                        new
                        {
                            TeamId = 33,
                            GroupId = 8,
                            Name = "Iceland"
                        },
                        new
                        {
                            TeamId = 34,
                            GroupId = 8,
                            Name = "Albania"
                        },
                        new
                        {
                            TeamId = 35,
                            GroupId = 8,
                            Name = "Turkey"
                        },
                        new
                        {
                            TeamId = 36,
                            GroupId = 4,
                            Name = "Georgia"
                        },
                        new
                        {
                            TeamId = 37,
                            GroupId = 4,
                            Name = "Switzerland"
                        },
                        new
                        {
                            TeamId = 38,
                            GroupId = 4,
                            Name = "Gibraltar"
                        },
                        new
                        {
                            TeamId = 39,
                            GroupId = 4,
                            Name = "Republic of Ireland"
                        },
                        new
                        {
                            TeamId = 40,
                            GroupId = 6,
                            Name = "Sweden"
                        },
                        new
                        {
                            TeamId = 41,
                            GroupId = 6,
                            Name = "Romania"
                        },
                        new
                        {
                            TeamId = 42,
                            GroupId = 6,
                            Name = "Malta"
                        },
                        new
                        {
                            TeamId = 43,
                            GroupId = 6,
                            Name = "Faroe Islands"
                        },
                        new
                        {
                            TeamId = 44,
                            GroupId = 6,
                            Name = "Spain"
                        },
                        new
                        {
                            TeamId = 45,
                            GroupId = 6,
                            Name = "Norway"
                        },
                        new
                        {
                            TeamId = 46,
                            GroupId = 10,
                            Name = "Liechtenstein"
                        },
                        new
                        {
                            TeamId = 47,
                            GroupId = 10,
                            Name = "Greece"
                        },
                        new
                        {
                            TeamId = 48,
                            GroupId = 10,
                            Name = "Italy"
                        },
                        new
                        {
                            TeamId = 49,
                            GroupId = 10,
                            Name = "Fineland"
                        },
                        new
                        {
                            TeamId = 50,
                            GroupId = 10,
                            Name = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            TeamId = 51,
                            GroupId = 10,
                            Name = "Armenia"
                        });
                });

            modelBuilder.Entity("Euro.Domain.Match", b =>
                {
                    b.HasOne("Euro.Domain.Team", "GuestTeam")
                        .WithMany()
                        .HasForeignKey("GuestTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Euro.Domain.Team", "HostTeam")
                        .WithMany()
                        .HasForeignKey("HostTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Euro.Domain.Team", null)
                        .WithMany("Matches")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("Euro.Domain.Team", b =>
                {
                    b.HasOne("Euro.Domain.Group", "Group")
                        .WithMany("Teams")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
